{"code":"!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=\"./src/client/client.ts\")}({\"./node_modules/process/browser.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/process/browser.js ***!\n  \\*****************************************/\n/*! no static exports found */function(module,exports){eval(\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\\n\\n//# sourceURL=webpack:///./node_modules/process/browser.js?\")},\"./node_modules/setimmediate/setImmediate.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/setimmediate/setImmediate.js ***!\n  \\***************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\\n    \"use strict\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \"function\") {\\n        callback = new Function(\"\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\\n        // So if we\\'re currently running a task, we\\'ll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \"too much recursion\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can\\'t be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\"\", \"*\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \"string\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\"message\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\"onmessage\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \"*\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\\'s been called.\\n            var script = doc.createElement(\"script\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don\\'t get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \"[object process]\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\\n\\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?')},\"./node_modules/timers-browserify/main.js\":\n/*!************************************************!*\\\n  !*** ./node_modules/timers-browserify/main.js ***!\n  \\************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\\n            (typeof self !== \"undefined\" && self) ||\\n            window;\\nvar apply = Function.prototype.apply;\\n\\n// DOM APIs, for completeness\\n\\nexports.setTimeout = function() {\\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\\n};\\nexports.setInterval = function() {\\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\\n};\\nexports.clearTimeout =\\nexports.clearInterval = function(timeout) {\\n  if (timeout) {\\n    timeout.close();\\n  }\\n};\\n\\nfunction Timeout(id, clearFn) {\\n  this._id = id;\\n  this._clearFn = clearFn;\\n}\\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\\nTimeout.prototype.close = function() {\\n  this._clearFn.call(scope, this._id);\\n};\\n\\n// Does not start the time, just sets up the members needed.\\nexports.enroll = function(item, msecs) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = msecs;\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = -1;\\n};\\n\\nexports._unrefActive = exports.active = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n\\n  var msecs = item._idleTimeout;\\n  if (msecs >= 0) {\\n    item._idleTimeoutId = setTimeout(function onTimeout() {\\n      if (item._onTimeout)\\n        item._onTimeout();\\n    }, msecs);\\n  }\\n};\\n\\n// setimmediate attaches itself to the global object\\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\\n// On some exotic environments, it\\'s not clear which object `setimmediate` was\\n// able to install onto.  Search each possibility in the same order as the\\n// `setimmediate` library.\\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\\n                       (this && this.setImmediate);\\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\\n                         (this && this.clearImmediate);\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\\n\\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?')},\"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */function(module,exports){eval('var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\"return this\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \"object\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it\\'s\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\\n\\n//# sourceURL=webpack:///(webpack)/buildin/global.js?')},\"./plugins sync recursive ^\\\\.\\\\/.*\\\\/client\\\\/.*$\":\n/*!*******************************************!*\\\n  !*** ./plugins sync ^\\.\\/.*\\/client\\/.*$ ***!\n  \\*******************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('var map = {\\n\\t\"./common/client/client\": \"./plugins/common/client/client.ts\",\\n\\t\"./common/client/client.ts\": \"./plugins/common/client/client.ts\"\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\treturn __webpack_require__(id);\\n}\\nfunction webpackContextResolve(req) {\\n\\tif(!__webpack_require__.o(map, req)) {\\n\\t\\tvar e = new Error(\"Cannot find module \\'\" + req + \"\\'\");\\n\\t\\te.code = \\'MODULE_NOT_FOUND\\';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn map[req];\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = \"./plugins sync recursive ^\\\\\\\\.\\\\\\\\/.*\\\\\\\\/client\\\\\\\\/.*$\";\\n\\n//# sourceURL=webpack:///./plugins_sync_^\\\\.\\\\/.*\\\\/client\\\\/.*$?')},\"./plugins/common/client/client.ts\":\n/*!*****************************************!*\\\n  !*** ./plugins/common/client/client.ts ***!\n  \\*****************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('/* WEBPACK VAR INJECTION */(function(global) {\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nexports._handler = void 0;\\r\\nclass Module {\\r\\n    constructor(client) {\\r\\n        this.client = client;\\r\\n        this.client.addSharedEvent(\"KOI::CLIENT::TeleportPlayer\", (x, y, z) => {\\r\\n            console.log(\"SOURCE\", global.source);\\r\\n        });\\r\\n        RegisterCommand(\"id\", (src) => console.log(src, GetPlayerServerId(src)), false);\\r\\n        this.client.registerCommand(\"myid\", (src) => this.client.utils.notify(GetPlayerServerId(0), GetPlayerFromServerId(2)));\\r\\n        this.client.registerCommand(\"revive\", (src, args) => this.client.game.player.revive(args[0] || GetPlayerPed(src)));\\r\\n        this.client.registerCommand(\"car\", (src, args) => this.client.game.vehicle.spawn(GetPlayerPed(src), args[0]));\\r\\n        this.client.registerCommand(\"dv\", this.client.game.vehicle.delete);\\r\\n        this.client.registerCommand(\"tpm\", (src) => this.client.game.player.teleport.marker(GetPlayerPed(src)));\\r\\n        this.client.registerCommand(\"tp\", (src, args) => this.client.game.player.teleport.coordinates(GetPlayerPed(src), args[0], args[1], args[2]));\\r\\n        this.client.registerCommand(\"coords\", (src) => this.client.utils.notify(GetEntityCoords(GetPlayerPed(src), true)));\\r\\n    }\\r\\n}\\r\\nconst _handler = (client) => new Module(client);\\r\\nexports._handler = _handler;\\r\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\\n\\n//# sourceURL=webpack:///./plugins/common/client/client.ts?')},\"./src/client/client.ts\":\n/*!******************************!*\\\n  !*** ./src/client/client.ts ***!\n  \\******************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('/* WEBPACK VAR INJECTION */(function(global, setImmediate) {\\r\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\r\\n    if (k2 === undefined) k2 = k;\\r\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\r\\n}) : (function(o, m, k, k2) {\\r\\n    if (k2 === undefined) k2 = k;\\r\\n    o[k2] = m[k];\\r\\n}));\\r\\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\\r\\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\\r\\n}) : function(o, v) {\\r\\n    o[\"default\"] = v;\\r\\n});\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\r\\n    __setModuleDefault(result, mod);\\r\\n    return result;\\r\\n};\\r\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\r\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\r\\n    return new (P || (P = Promise))(function (resolve, reject) {\\r\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\\r\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\r\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n    });\\r\\n};\\r\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\r\\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\\r\\n};\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nconst utils_1 = __importDefault(__webpack_require__(/*! ./utils */ \"./src/client/utils.ts\"));\\r\\nconst game_1 = __importDefault(__webpack_require__(/*! ./game */ \"./src/client/game.ts\"));\\r\\nglobal = global;\\r\\nexports = global.exports;\\r\\nclass Client {\\r\\n    constructor() {\\r\\n        this.addEvent = on;\\r\\n        this.addSharedEvent = onNet;\\r\\n        this.triggerEvent = emit;\\r\\n        this.triggerSharedEvent = emitNet;\\r\\n        this.wait = (ms) => new Promise((res) => setTimeout(res, ms));\\r\\n        this.registerCommand = (name, handler, config = false) => {\\r\\n            onNet(`KOI::CLIENT::Command[${name}]`, (src, args, raw) => {\\r\\n                return handler(src, args, raw);\\r\\n            });\\r\\n            emitNet(\"KOI::SERVER::RegisterCommand\", name, () => { }, config, true);\\r\\n            return true;\\r\\n        };\\r\\n        this.setCommandDescription = (name, config) => {\\r\\n            setImmediate(() => emit(\"chat:addSuggestion\", `/${name}`, config.description || \"No Description is Set\", config.argsDescription || []));\\r\\n            return true;\\r\\n        };\\r\\n        this._initPlugins = (plugins) => __awaiter(this, void 0, void 0, function* () {\\r\\n            for (const plugin of plugins) {\\r\\n                this.plugins[plugin.resourceName] = yield Promise.resolve().then(() => __importStar(__webpack_require__(\"./plugins sync recursive ^\\\\\\\\.\\\\\\\\/.*\\\\\\\\/client\\\\\\\\/.*$\")(`./${plugin.resourceName}/client/${plugin.file}`)));\\r\\n                this.plugins[plugin.resourceName]._handler(this);\\r\\n            }\\r\\n        });\\r\\n        this._events = {\\r\\n            retrieveClientSettings: (settings) => {\\r\\n                this._initPlugins(settings.plugins);\\r\\n                this.config = settings.config;\\r\\n            },\\r\\n        };\\r\\n        this.config = false;\\r\\n        this.plugins = {};\\r\\n        this.utils = new utils_1.default(this);\\r\\n        this.game = new game_1.default(this);\\r\\n        on(\"sessionInitialized\", () => console.log(\"CLIENT STARTING\"));\\r\\n        emitNet(\"KOI::SERVER::RequestClientSettings\");\\r\\n        onNet(\"KOI::CLIENT::RetrieveClientSettings\", this._events.retrieveClientSettings);\\r\\n        onNet(\"KOI::CLIENT::SetCommandDescription\", this.setCommandDescription);\\r\\n        setTick(() => {\\r\\n            if (this.config) {\\r\\n                for (const prop in this.game.onTickRate) {\\r\\n                    if (this.config[prop])\\r\\n                        this.game.onTickRate[prop]();\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n        console.log(\"[🎏 Koi] Client Ready!\");\\r\\n    }\\r\\n}\\r\\nconst client = new Client();\\r\\nglobal.exports(\"getClientProps\", () => client);\\r\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../node_modules/timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\\n\\n//# sourceURL=webpack:///./src/client/client.ts?')},\"./src/client/game.ts\":\n/*!****************************!*\\\n  !*** ./src/client/game.ts ***!\n  \\****************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('\\r\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\r\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\r\\n    return new (P || (P = Promise))(function (resolve, reject) {\\r\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\\r\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\r\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n    });\\r\\n};\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nclass Game {\\r\\n    constructor(client) {\\r\\n        this.optimizeFPS = (playerId) => {\\r\\n            let ped = GetPlayerPed(playerId);\\r\\n            ClearAllBrokenGlass();\\r\\n            ClearAllHelpMessages();\\r\\n            LeaderboardsReadClearAll();\\r\\n            ClearBrief();\\r\\n            ClearGpsFlags();\\r\\n            ClearPrints();\\r\\n            ClearSmallPrints();\\r\\n            ClearReplayStats();\\r\\n            LeaderboardsClearCacheData();\\r\\n            ClearFocus();\\r\\n            ClearHdArea();\\r\\n            ClearPedBloodDamage(ped);\\r\\n            ClearPedWetness(ped);\\r\\n            ClearPedEnvDirt(ped);\\r\\n            ResetPedVisibleDamage(ped);\\r\\n        };\\r\\n        this.onTickRate = {\\r\\n            noDispatchService: () => {\\r\\n                for (let i = 0; i < 15; i++) {\\r\\n                    EnableDispatchService(i, false);\\r\\n                }\\r\\n            },\\r\\n            noWantedLevel: () => {\\r\\n                if (GetPlayerWantedLevel(PlayerId()) != 0) {\\r\\n                    SetPlayerWantedLevel(PlayerId(), 0, false);\\r\\n                    SetPlayerWantedLevelNow(PlayerId(), false);\\r\\n                }\\r\\n            },\\r\\n            noClip: (playerId) => {\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                let entity = (IsPedInAnyVehicle(ped, false) && GetVehiclePedIsUsing(ped)) || ped;\\r\\n                let currentSpeed = 2;\\r\\n                let noclipEntity = (IsPedInAnyVehicle(ped, false) && GetVehiclePedIsUsing(ped)) || ped;\\r\\n                let newPos = GetEntityCoords(entity, true);\\r\\n                this.client.utils.drawText(\"NOCLIP ~g~ON\", 0.7, 0.9);\\r\\n                DisableControlAction(0, 32, true);\\r\\n                DisableControlAction(0, 268, true);\\r\\n                DisableControlAction(0, 31, true);\\r\\n                DisableControlAction(0, 269, true);\\r\\n                DisableControlAction(0, 33, true);\\r\\n                DisableControlAction(0, 266, true);\\r\\n                DisableControlAction(0, 34, true);\\r\\n                DisableControlAction(0, 30, true);\\r\\n                DisableControlAction(0, 267, true);\\r\\n                DisableControlAction(0, 35, true);\\r\\n                DisableControlAction(0, 44, true);\\r\\n                DisableControlAction(0, 20, true);\\r\\n                var yoff = 0.0;\\r\\n                var zoff = 0.0;\\r\\n                if (IsDisabledControlPressed(0, 32))\\r\\n                    yoff = 0.5;\\r\\n                if (IsDisabledControlPressed(0, 33))\\r\\n                    yoff = -0.5;\\r\\n                if (IsDisabledControlPressed(0, 34))\\r\\n                    SetEntityHeading(ped, GetEntityHeading(ped) + 3.0);\\r\\n                if (IsDisabledControlPressed(0, 35))\\r\\n                    SetEntityHeading(ped, GetEntityHeading(ped) - 3.0);\\r\\n                if (IsDisabledControlPressed(0, 44))\\r\\n                    zoff = 0.21;\\r\\n                if (IsDisabledControlPressed(0, 20))\\r\\n                    zoff = -0.21;\\r\\n                newPos = GetOffsetFromEntityInWorldCoords(noclipEntity, 0.0, yoff * (currentSpeed + 0.3), zoff * (currentSpeed + 0.3));\\r\\n                var heading = GetEntityHeading(noclipEntity);\\r\\n                SetEntityVelocity(noclipEntity, 0.0, 0.0, 0.0);\\r\\n                SetEntityRotation(noclipEntity, 0.0, 0.0, 0.0, 0, false);\\r\\n                SetEntityHeading(noclipEntity, heading);\\r\\n                SetEntityCollision(noclipEntity, false, false);\\r\\n                SetEntityCoordsNoOffset(noclipEntity, newPos[0], newPos[1], newPos[2], true, true, true);\\r\\n                SetEntityCollision(noclipEntity, true, true);\\r\\n                return true;\\r\\n            },\\r\\n        };\\r\\n        this.player = {\\r\\n            revive: (playerId) => __awaiter(this, void 0, void 0, function* () {\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                let playerPos = GetEntityCoords(ped, true);\\r\\n                NetworkResurrectLocalPlayer(playerPos[0], playerPos[1], playerPos[2], 0, true, false);\\r\\n                SetPlayerInvincible(ped, false);\\r\\n                ClearPedBloodDamage(ped);\\r\\n                return true;\\r\\n            }),\\r\\n            kill: (playerId) => {\\r\\n                SetEntityHealth(GetPlayerPed(playerId), 0);\\r\\n                return true;\\r\\n            },\\r\\n            track: (playerId) => {\\r\\n                let coords = GetEntityCoords(GetPlayerPed(playerId), true);\\r\\n                SetNewWaypoint(coords[0], coords[1]);\\r\\n                return true;\\r\\n            },\\r\\n            invisible: (playerId, toggle) => {\\r\\n                SetEntityVisible(GetPlayerPed(playerId), toggle, false);\\r\\n                return true;\\r\\n            },\\r\\n            godMode: (playerId, toggle) => {\\r\\n                SetPlayerInvincible(playerId, toggle);\\r\\n                SetEntityInvincible(GetPlayerPed(playerId), toggle);\\r\\n                return true;\\r\\n            },\\r\\n            giveFullArmour: (playerId) => {\\r\\n                SetPedArmour(GetPlayerPed(playerId), 100);\\r\\n                return true;\\r\\n            },\\r\\n            getCoords: (playerId) => {\\r\\n                return GetEntityCoords(GetPlayerPed(playerId), true);\\r\\n            },\\r\\n            teleport: {\\r\\n                marker: (playerId) => __awaiter(this, void 0, void 0, function* () {\\r\\n                    let waypoint = GetFirstBlipInfoId(8);\\r\\n                    if (!DoesBlipExist(waypoint)) {\\r\\n                        return \"Blip Doesn\\'t Exist\";\\r\\n                    }\\r\\n                    let coords = GetBlipInfoIdCoord(waypoint);\\r\\n                    for (let height = 1; height <= 1000; height++) {\\r\\n                        let [, groundZ] = GetGroundZFor_3dCoord(coords[0], coords[1], height, false);\\r\\n                        SetPedCoordsKeepVehicle(GetPlayerPed(playerId), coords[0], coords[1], height);\\r\\n                        yield this.client.wait(5);\\r\\n                        if (groundZ)\\r\\n                            return true;\\r\\n                    }\\r\\n                    return false;\\r\\n                }),\\r\\n                coordinates: (playerId, x, y, z) => __awaiter(this, void 0, void 0, function* () {\\r\\n                    SetPedCoordsKeepVehicle(GetPlayerPed(playerId), x, y, z);\\r\\n                    return true;\\r\\n                }),\\r\\n            },\\r\\n        };\\r\\n        this.vehicle = {\\r\\n            spawn: (playerId, model = \"adder\") => __awaiter(this, void 0, void 0, function* () {\\r\\n                let hash = GetHashKey(model);\\r\\n                if (!IsModelInCdimage(hash) || !IsModelAVehicle(hash)) {\\r\\n                    return this.client.utils.notify(\"Requested Model is Not Found!\");\\r\\n                }\\r\\n                RequestModel(hash);\\r\\n                while (!HasModelLoaded(hash)) {\\r\\n                    yield this.client.wait(500);\\r\\n                }\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                let coords = GetEntityCoords(ped, true);\\r\\n                let vehicle = CreateVehicle(hash, coords[0], coords[1], coords[2], GetEntityHeading(ped), true, false);\\r\\n                SetPedIntoVehicle(ped, vehicle, -1);\\r\\n                SetEntityAsNoLongerNeeded(vehicle);\\r\\n                SetModelAsNoLongerNeeded(model);\\r\\n                return true;\\r\\n            }),\\r\\n            delete: (playerId) => __awaiter(this, void 0, void 0, function* () {\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                const DeleteGivenVehicle = (veh, timeoutMax) => __awaiter(this, void 0, void 0, function* () {\\r\\n                    let timeout = 0;\\r\\n                    SetEntityAsMissionEntity(veh, true, true);\\r\\n                    DeleteVehicle(veh);\\r\\n                    if (DoesEntityExist(veh)) {\\r\\n                        while (DoesEntityExist(veh) && timeout < timeoutMax) {\\r\\n                            DeleteVehicle(veh);\\r\\n                            if (!DoesEntityExist(veh)) {\\r\\n                                return \"Vehicle deleted.\";\\r\\n                            }\\r\\n                            timeout += 1;\\r\\n                            yield this.client.wait(500);\\r\\n                            if (DoesEntityExist(veh) && timeout == timeoutMax - 1) {\\r\\n                                return `Failed to delete vehicle after ${timeoutMax} retries.`;\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n                if (DoesEntityExist(ped) && !IsEntityDead(ped)) {\\r\\n                    let vehicle;\\r\\n                    if (IsPedSittingInAnyVehicle(ped)) {\\r\\n                        vehicle = GetVehiclePedIsIn(ped, false);\\r\\n                        if (GetPedInVehicleSeat(vehicle, -1) !== ped) {\\r\\n                            return \"You must be in the driver\\'s seat!\";\\r\\n                        }\\r\\n                    }\\r\\n                    else {\\r\\n                        vehicle = this.vehicle.getClosestOne(playerId);\\r\\n                    }\\r\\n                    DeleteGivenVehicle(vehicle, 0);\\r\\n                }\\r\\n                return true;\\r\\n            }),\\r\\n            seatbelt: (playerId, toggle) => __awaiter(this, void 0, void 0, function* () {\\r\\n                toggle = !toggle ? 0 : 1;\\r\\n                SetPedCanBeKnockedOffVehicle(GetPlayerPed(playerId), toggle);\\r\\n                return true;\\r\\n            }),\\r\\n            clean: (playerId) => {\\r\\n                SetVehicleDirtLevel(GetVehiclePedIsUsing(GetPlayerPed(playerId)), 1.0);\\r\\n                return true;\\r\\n            },\\r\\n            dirty: (playerId) => {\\r\\n                SetVehicleDirtLevel(GetVehiclePedIsUsing(GetPlayerPed(playerId)), 15.0);\\r\\n                return true;\\r\\n            },\\r\\n            repairEngine: (playerId) => {\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                let vehicle = GetVehiclePedIsUsing(ped);\\r\\n                SetVehicleEngineHealth(vehicle, 1000);\\r\\n                SetVehicleEngineOn(vehicle, true, true, true);\\r\\n                return true;\\r\\n            },\\r\\n            repairVehicle: (playerId) => {\\r\\n                let ped = GetPlayerPed(playerId);\\r\\n                let vehicle = GetVehiclePedIsUsing(ped);\\r\\n                SetVehicleFixed(vehicle);\\r\\n                SetVehicleDirtLevel(vehicle, 0.0);\\r\\n                SetVehicleLights(vehicle, 0);\\r\\n                SetVehicleBurnout(vehicle, false);\\r\\n                SetVehicleUndriveable(vehicle, false);\\r\\n                return true;\\r\\n            },\\r\\n            getClosestOne: (playerId) => {\\r\\n                let pos = GetEntityCoords(GetPlayerPed(playerId), true);\\r\\n                let flags = [0, 2, 4, 6, 7, 23, 127, 260, 2146, 2175, 12294, 16384, 16386, 20503, 32768, 67590, 67711, 98309, 100359];\\r\\n                for (const flag of flags) {\\r\\n                    let vehicle = GetClosestVehicle(pos[0], pos[1], pos[2], 5.001, 0, flag);\\r\\n                    if (vehicle)\\r\\n                        return vehicle;\\r\\n                }\\r\\n                return false;\\r\\n            },\\r\\n        };\\r\\n        this.client = client;\\r\\n    }\\r\\n}\\r\\nexports.default = Game;\\r\\n\\n\\n//# sourceURL=webpack:///./src/client/game.ts?')},\"./src/client/utils.ts\":\n/*!*****************************!*\\\n  !*** ./src/client/utils.ts ***!\n  \\*****************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nclass Utils {\\r\\n    constructor(client) {\\r\\n        this.drawText3D = (text, x, y, z, r, g, b) => {\\r\\n            SetDrawOrigin(x, y, z, 0);\\r\\n            SetTextFont(0);\\r\\n            SetTextProportional(false);\\r\\n            SetTextScale(0.0, 0.2);\\r\\n            SetTextColour(r, g, b, 255);\\r\\n            SetTextDropshadow(0, 0, 0, 0, 255);\\r\\n            SetTextEdge(2, 0, 0, 0, 150);\\r\\n            SetTextDropShadow();\\r\\n            SetTextOutline();\\r\\n            SetTextEntry(\"STRING\");\\r\\n            SetTextCentre(true);\\r\\n            AddTextComponentString(text);\\r\\n            DrawText(0.0, 0.0);\\r\\n            ClearDrawOrigin();\\r\\n            return true;\\r\\n        };\\r\\n        this.drawText = (text, x, y) => {\\r\\n            SetTextFont(1);\\r\\n            SetTextProportional(true);\\r\\n            SetTextScale(0.0, 0.6);\\r\\n            SetTextDropshadow(1, 0, 0, 0, 255);\\r\\n            SetTextEdge(1, 0, 0, 0, 255);\\r\\n            SetTextDropShadow();\\r\\n            SetTextOutline();\\r\\n            SetTextEntry(\"STRING\");\\r\\n            AddTextComponentString(text);\\r\\n            DrawText(x, y);\\r\\n            return true;\\r\\n        };\\r\\n        this.notify = (...text) => {\\r\\n            SetNotificationTextEntry(\"STRING\");\\r\\n            AddTextComponentString(text.join(\" \"));\\r\\n            DrawNotification(false, false);\\r\\n            return true;\\r\\n        };\\r\\n        this.client = client;\\r\\n    }\\r\\n}\\r\\nexports.default = Utils;\\r\\n\\n\\n//# sourceURL=webpack:///./src/client/utils.ts?')}});","extractedComments":[]}